shinyApp(uiPromo,serverPromo)
library(shiny)
library(data.table)
library(rpart)
uiRetention<-fluidPage(
pageWithSidebar(
headerPanel("Customer Retention"),
sidebarPanel(
fileInput('file1', 'Choose CSV File',
multiple = TRUE,
accept=c('text/csv', 'text/comma-separated-values,text/plain', '.csv')),
downloadButton("downloadData", "Download")
),
mainPanel(
tableOutput("contents")
)
), tags$style(type="text/css",".shiny-output-error {visibility:hidden;}",
".shiny-output-error:before{visibility:hidden;}"
))
serverRetention <- function(input, output, session) {
reactive_data <- reactive({
print(input$file1$datapath)
data <- fread(input$file1$datapath, header = T, sep = ",",quote = '"')
data$Exited <- as.numeric(data$Exited)
data$CustomerId <- as.integer(data$CustomerId)
#Categorical data
data$Exited <- factor(data$Exited)
data$HasCrCard <- factor(data$HasCrCard)
data$IsActiveMember <- factor(data$IsActiveMember)
data$Gender <- factor(data$Gender)
data$Tenure <- factor(data$Tenure)
data$Geography <- factor(data$Geography)
data$NumOfProducts <- factor(data$NumOfProducts)
data$Promomethod <- factor(data$Promomethod)
data$Language_provided <- factor(data$Language_provided)
data$Language_preferred <- factor(data$Language_preferred)
#Numerical data
data$Age <- as.numeric(data$Age)
data$CreditScore <- as.numeric(data$CreditScore)
data$Balance <- as.numeric(data$Balance)
data$EstimatedSalary <- as.numeric(data$EstimatedSalary)
return(data)
})
output$contents <- renderTable({
data <- reactive_data()
data1 <- data.frame(predict(PrunedCARTmodel1,newdata=data,type="class"))
data2 <- cbind(as.integer(data$CustomerId),as.numeric(data$CreditScore)
,factor(data$Geography),factor(data$Gender),as.numeric(data$Age)
,factor(data$Tenure),as.numeric(data$Balance),factor(data$NumOfProducts)
,factor(data$HasCrCard),factor(data$IsActiveMember)
,as.numeric(data$EstimatedSalary),factor(data$Promomethod)
,factor(data$Language_provided),factor(data$Language_preferred),data1)
#leaving <- subset(data2, data1==1)
colnames(data2) <- c("Customer ID","CreditScore","Geography","Gender"
,"Age","Tenure","Balance","NumOfProducts","HasCrCard","IsActiveMember"
,"EstimatedSalary","Promomethod","Language_provided","Language_preferred"
,"Predicted Retention")
data2
})
output$downloadData <- downloadHandler(
filename = "leaving.csv",
content = function(file) {
data <- reactive_data()
data1 <- data.frame(predict(PrunedCARTmodel1,newdata=data,type="class"))
data2 <- cbind(as.integer(data$CustomerId),as.numeric(data$CreditScore)
,factor(data$Geography),factor(data$Gender),as.numeric(data$Age)
,factor(data$Tenure),as.numeric(data$Balance),factor(data$NumOfProducts)
,factor(data$HasCrCard),factor(data$IsActiveMember)
,as.numeric(data$EstimatedSalary),factor(data$Promomethod)
,factor(data$Language_provided),factor(data$Language_preferred),data1)
colnames(data2) <- c("CustomerId","CreditScore","Geography","Gender"
,"Age","Tenure","Balance","NumOfProducts","HasCrCard","IsActiveMember"
,"EstimatedSalary","Promomethod","Language_provided","Language_preferred"
,"PredictedRetention")
leaving <- subset(data2, data1==1)
write.csv(leaving, file, row.names = TRUE)
}
)
}
shinyApp(uiRetention,serverRetention)
rbinom(5,50,0.05)
pbinom(5,50,0.05)
1-0.9622238
pbinom(12,25,0.25)
1-pbinom(12,25,0.25)
qnorm(0.05,0,1)
library(rsconnect)
library(rsconnect)
library(rsconnect)
rsconnect::setAccountInfo(name='y34ya0-chong-wei0kang', token='A04975A900526EE9A60201EE0FF8E10E', secret='IdYM81VulwRTi+t3YOYVoa9WATML+sxVYOPQYuXi')
rsconnect::deployApp("C:/Users/Wei Kang/OneDrive - Nanyang Technological University/Year 2/Sem 1/BC2406 Analytics I/BC2406 Course Materials/Group Project/Codes/MyHealth")
rsconnect::deployApp("C:/Users/Wei Kang/OneDrive - Nanyang Technological University/Year 2/Sem 1/BC2406 Analytics I/BC2406 Course Materials/Group Project/Codes/MyHealth")
library(shiny); runApp('C:/Users/Wei Kang/OneDrive - Nanyang Technological University/Year 2/Sem 1/BC2406 Analytics I/BC2406 Course Materials/Group Project/Codes/MyHealth/main.R')
runApp('C:/Users/Wei Kang/OneDrive - Nanyang Technological University/Year 2/Sem 1/BC2406 Analytics I/BC2406 Course Materials/Group Project/Codes/MyHealth/main.R')
my_packages = c("markdown", "shiny", "shinythemes", "data.table", "RCurl", "tidyverse", "cvms", "caTools", "tibble")
library(shiny); runApp('C:/Users/Wei Kang/OneDrive - Nanyang Technological University/Year 2/Sem 1/BC2406 Analytics I/BC2406 Course Materials/Group Project/Codes/Heart-Disease-Predictor-Web-App/main.R')
library(GGally)
library(data.table)
library(tidyverse)
library(ggcorrplot)
library(Boruta)
library(corrgram)
library(e1071)
library(gridExtra)
#-------------------------------Setting Working Directory (NEED TO BE CHANGED)-----------------------------------------------#
setwd("C:/Users/Wei Kang/OneDrive - Nanyang Technological University/Year 2/Sem 1/BC2406 Analytics I/BC2406 Course Materials/Group Project/Datasets/Heart Failure Prediction")
heart_failure_dt <-fread("heart_failure_prediction_raw.csv")
heart_failure_dt %>% glimpse()
heart_failure_dt %>% head()
heart_failure_dt %>% summary()
#---------------------------------------------Factorising Categorical Variables----------------------------------------------#
heart_failure_dt <- heart_failure_dt %>%
mutate_if(is.character, as.factor)
heart_failure_dt$FastingBS <- factor(heart_failure_dt$FastingBS)
heart_failure_dt$HeartDisease <- factor(heart_failure_dt$HeartDisease)
heart_failure_dt %>% summary()
#---------------------------------------------Checking Levels & Re-Levelling------------------------------------------------#
levels(heart_failure_dt$Sex)
levels(heart_failure_dt$FastingBS)
levels(heart_failure_dt$ChestPainType)
levels(heart_failure_dt$RestingECG)
levels(heart_failure_dt$ST_Slope)
levels(heart_failure_dt$HeartDisease)
levels(heart_failure_dt$ExerciseAngina)
heart_failure_dt$RestingECG <- relevel(heart_failure_dt$RestingECG, ref = "Normal")
heart_failure_dt$ST_Slope   <- relevel(heart_failure_dt$ST_Slope, ref = "Flat")
#-------------------------------------------------------Data Cleaning---------------------------------------------------------#
#------------------------#
# CHECKING FOR NULL VALUES
#------------------------#
# Method 1:
any(is.na(heart_failure_dt))
#--------------------------------------#
#  REPLACING OF ROWS WITH RESTINGBP == 0
#--------------------------------------#
# Earlier, in our data visualization, we detected 1 odd row where resting BP is equal to zero. We concluded that this is an error in data
# input as a person is unlikely to have a resting BP of 0 and thus, we will replace it with the median value.
heart_failure_dt[RestingBP == 0]
#Replacing with median RestingBP of the other values.
remaining.RestingBP.Median <- heart_failure_dt %>% filter(RestingBP > 0) %>% summarise(median(RestingBP)) %>% as.numeric
heart_failure_dt$RestingBP[heart_failure_dt$RestingBP == 0] <- remaining.RestingBP.Median
# Checking whether the replacement worked correctly using visualization
replace1<-heart_failure_dt %>% ggplot(aes(RestingBP)) +
geom_histogram(colour = "black",fill = "green", bins = 30) +
labs(x="",title = "Resting Blood Pressure") +
theme_minimal()
# We see that the value where RestingBP == 0 has been replaced correctly now.
#----------------------------------------#
#  REPLACING OF ROWS WITH CHOLESTEROL == 0
#----------------------------------------#
heart_failure_dt[Cholesterol == 0]
# Replacing rows where cholesterol == 0  as it does not make sense for an individual to have 0 cholesterol.
# The replace value is the median of the remaining values that are > 0 for the respective Sex.
m.Cholestrol.Median <- heart_failure_dt %>% filter(Sex == "M", Cholesterol > 0) %>% summarise(median(Cholesterol)) %>% as.numeric
f.Cholestrol.Median <- heart_failure_dt %>% filter(Sex == "F", Cholesterol > 0) %>% summarise(median(Cholesterol)) %>% as.numeric
heart_failure_dt$Cholesterol[heart_failure_dt$Sex == "M" & heart_failure_dt$Cholesterol == 0] <- m.Cholestrol.Median
heart_failure_dt$Cholesterol[heart_failure_dt$Sex == "F" & heart_failure_dt$Cholesterol == 0] <- f.Cholestrol.Median
# Checking whether the replacement worked correctly
replace2<-heart_failure_dt %>% ggplot(aes(Cholesterol)) +
geom_histogram(colour = "black",fill = "yellow", bins = 30) +
labs(x="",title = "Cholesterol Level") +
theme_minimal()
#-------------------------------------#
#  REPLACING OF ROWS WITH OLDPEAK == 0
#-------------------------------------#
heart_failure_dt[Oldpeak == 0]
# Replacing rows where Oldpeak == 0.
# The replace value is the median of the remaining values that are != 0 for the respective Sex.
m.Oldpeak.Median <- heart_failure_dt %>% filter(Sex == "M", Oldpeak != 0) %>% summarise(median(Oldpeak)) %>% as.numeric
f.Oldpeak.Median <- heart_failure_dt %>% filter(Sex == "F", Oldpeak != 0) %>% summarise(median(Oldpeak)) %>% as.numeric
heart_failure_dt$Oldpeak[heart_failure_dt$Sex == "M" & heart_failure_dt$Oldpeak == 0] <- m.Oldpeak.Median
heart_failure_dt$Oldpeak[heart_failure_dt$Sex == "F" & heart_failure_dt$Oldpeak == 0] <- f.Oldpeak.Median
# Checking whether the replacement worked correctly
replace3<-heart_failure_dt %>% ggplot(aes(Oldpeak)) +
geom_histogram(colour = "black",fill = "red", bins = 30) +
labs(x="",title = "Oldpeak Level") +
theme_minimal()
grid.arrange(replace1,replace2,replace3,ncol= 3)
#----------------------------------------#
# CHECKING SKEWNESS FOR OUTLIER CORRECTION
#----------------------------------------#
# Age
skewness1 <- ggplot(heart_failure_dt, aes(Age)) +
geom_density(alpha = 2, fill = "lightblue") +
expand_limits(x = 0, y = 0) +
labs(y = "Density", x = "Age", title = "Density Plot of Age") +
geom_vline(aes(xintercept=mean(Age)), color="red", linetype="dashed", size=1)
skewness(heart_failure_dt$Age)
# RestingBP
skewness2<- ggplot(heart_failure_dt, aes(RestingBP)) +
geom_density(alpha = 2, fill = "lightblue") +
expand_limits(x = 0, y = 0) +
labs(y = "Density", x = "RestingBP", title = "Density Plot of RestingBP") +
geom_vline(aes(xintercept=mean(RestingBP)), color="red", linetype="dashed", size=1)
skewness(heart_failure_dt$RestingBP)
# Cholesterol
skewness3<- ggplot(heart_failure_dt, aes(Cholesterol)) +
geom_density(alpha = 2, fill = "lightblue") +
expand_limits(x = 0, y = 0) +
labs(y = "Density", x = "Cholesterol", title = "Density Plot of Cholesterol") +
geom_vline(aes(xintercept=mean(Cholesterol)), color="red", linetype="dashed", size=1)
skewness(heart_failure_dt$Cholesterol)
# MaxHR
skewness4<- ggplot(heart_failure_dt, aes(MaxHR)) +
geom_density(alpha = 2, fill = "lightblue") +
expand_limits(x = 0, y = 0) +
labs(y = "Density", x = "MaxHR", title = "Density Plot of MaxHR") +
geom_vline(aes(xintercept=mean(MaxHR)), color="red", linetype="dashed", size=1)
skewness(heart_failure_dt$MaxHR)
# Oldpeak
skewness5<-ggplot(heart_failure_dt, aes(Oldpeak)) +
geom_density(alpha = 2, fill = "lightblue") +
expand_limits(x = 0, y = 0) +
labs(y = "Density", x = "Oldpeak", title = "Density Plot of Oldpeak") +
geom_vline(aes(xintercept=mean(Oldpeak)), color="red", linetype="dashed", size=1)
skewness(heart_failure_dt$Oldpeak)
grid.arrange(skewness1,skewness2,skewness3,skewness4,skewness5,nrow = 2, ncol =3)
Skewness <- c(skewness(heart_failure_dt$Age),skewness(heart_failure_dt$RestingBP),skewness(heart_failure_dt$Cholesterol),skewness(heart_failure_dt$MaxHR),skewness(heart_failure_dt$Oldpeak))
Variable <- c("Age","RestingBP" ,"Cholesterol", "MaxHR", "Oldpeak")
summary_results <- data.table(Variable, Skewness)
summary_results
# Insight: Only Cholesterol has a skewness > 1.
#------------------------------------#
# OUTLIER REPLACEMENT FOR CHOLESTEROL
#----------------------------------- #
# We Define outliers as those values beyond 1.5 IQR of Q3 and Q1.
# i.e. Values which are more than Q3 + 1.5 IQR and Q1- 1.5 IQR are considered outliers and replaced with the median to achieve a more balanced distribution.
Cholesterol_out <- boxplot(heart_failure_dt$Cholesterol, plot = FALSE)
Cholesterol_IQR <-Cholesterol_out$stats[4] - Cholesterol_out$stats[2]
heart_failure_dt[Cholesterol <= Cholesterol_out$stats[2] - 1.5 * Cholesterol_IQR,.N] + heart_failure_dt[Cholesterol >= Cholesterol_out$stats[4] + 1.5 * Cholesterol_IQR,.N]
heart_failure_dt$Cholesterol[heart_failure_dt$Cholesterol <= Cholesterol_out$stats[2] - 1.5 * Cholesterol_IQR] <- Cholesterol_out$stats[3]
heart_failure_dt$Cholesterol[heart_failure_dt$Cholesterol >= Cholesterol_out$stats[4] + 1.5 * Cholesterol_IQR] <- Cholesterol_out$stats[3]
# Checking Skewness After Replacement
newplot1 <-ggplot(heart_failure_dt, aes(Cholesterol)) +
geom_density(alpha = 2, fill = "lightblue") +
expand_limits(x = 0, y = 0) +
labs(y = "Density", x = "Cholesterol", title = "Density Plot of Cholesterol") +
geom_vline(aes(xintercept=mean(Cholesterol)), color="red", linetype="dashed", size=1)
skewness(heart_failure_dt$Cholesterol)
#------------------------------------#
# OUTLIER REPLACEMENT FOR RESTINGBP
#----------------------------------- #
# We Define outliers as those values beyond 1.5 IQR of Q3 and Q1.
# i.e. Values which are more than Q3 + 1.5 IQR and Q1- 1.5 IQR are considered outliers and replaced with the median to achieve a more balanced distribution.
RestingBP_out <- boxplot(heart_failure_dt$RestingBP, plot = FALSE)
RestingBP_IQR <-RestingBP_out$stats[4] - RestingBP_out$stats[2]
heart_failure_dt[RestingBP <= RestingBP_out$stats[2] - 1.5 * RestingBP_IQR,.N] + heart_failure_dt[RestingBP >= RestingBP_out$stats[4] + 1.5 * RestingBP_IQR,.N]
heart_failure_dt$RestingBP[heart_failure_dt$RestingBP <= RestingBP_out$stats[2] - 1.5 * RestingBP_IQR] <- RestingBP_out$stats[3]
heart_failure_dt$RestingBP[heart_failure_dt$RestingBP >= RestingBP_out$stats[4] + 1.5 * RestingBP_IQR] <- RestingBP_out$stats[3]
# Checking Skewness After Replacement
newplot2<- ggplot(heart_failure_dt, aes(RestingBP)) +
geom_density(alpha = 2, fill = "lightblue") +
expand_limits(x = 0, y = 0) +
labs(y = "Density", x = "RestingBP", title = "Density Plot of RestingBP") +
geom_vline(aes(xintercept=mean(RestingBP)), color="red", linetype="dashed", size=1)
skewness(heart_failure_dt$Cholesterol)
grid.arrange(newplot1,newplot2,ncol=2)
#------------------------------------Data Exploration & Visualisation-----------------------------------------#
#---------------------#
# UNIVARIATE ANALYSIS
#---------------------#
# Age
# Insight: Most individuals in the dataset are around age 47-60, with mean at 53.5 and median at 54.
heart_failure_dt$Age %>% summary()
univariate1 <-ggplot(data = heart_failure_dt, aes(x = Age)) +
geom_boxplot(color = "darkblue", fill = "lightblue") +
labs(title = "Age Box Plot", x = "Age") +
theme_minimal()
# Sex
# Insight: Most individuals in the dataset are males, we need to take note of this as results could be biased due to this.
heart_failure_dt$Sex %>% summary()
univariate2<-ggplot(data = heart_failure_dt, aes(x = Sex, fill = Sex)) +
geom_bar() +
labs(title = "Distribution of Sex among patients", x = "Sex", y = "Count") +
theme_minimal()
# 63% males have heart disease compared to 26% in females, suggesting that males are more likely to have heart disease
MaleHD<-subset(heart_failure_dt,heart_failure_dt$Sex=="M")
sum(MaleHD$HeartDisease==1)/nrow(MaleHD)
FemaleHD<-subset(heart_failure_dt,heart_failure_dt$Sex=="F")
sum(FemaleHD$HeartDisease==1)/nrow(FemaleHD)
# ChestPainType
# Insight: The most common chest pain individuals in this dataset face is ASY (Asymptomatic).
# Around 500 observation are asymptomatic, meaning that about half of our participants didn't have any previous symptoms before suffering heart attack.
# As we can see, women are significantly less asymptomatic than men. Most heart failures came without prior notice.
heart_failure_dt$ChestPainType %>% summary()
univariate3<-ggplot(data = heart_failure_dt, aes(x = ChestPainType, fill = ChestPainType)) +
geom_bar() +
labs(title = "Distribution of Chest Pain Type", x = "Chest Pain Type", y = "Count") +
theme_minimal()
# RestingBP
heart_failure_dt$RestingBP %>% summary()
univariate4 <-ggplot(data = heart_failure_dt, aes(x = RestingBP)) +
geom_boxplot(color = "darkblue", fill = "lightblue") +
labs(title = "Resting Blood Pressure Box Plot", x = "Resting Blood Pressure") +
theme_minimal()
# We split resting blood pressure into 5 ranges to further analyse how resting blood pressure contributes to heart disease
# From Google:
# Normal	systolic: less than 120 mm Hg
# At Risk (prehypertension)	systolic: 120–139 mm Hg
# High Blood Pressure (hypertension)	systolic: 140 mm Hg or higher
# Insight: Based on this, we know the higher the blood pressure the more likely you are to get heart disease
# If your blood pressure is between 80-120 you have a 48% chance to get heart disease if its 120-160 you
# have a 57% chance and if your blood pressure is 160-200 you. have a 72% chance
cut_RBP<-split(heart_failure_dt, cut(heart_failure_dt$RestingBP, c(0,40,80,120,160,200), include.lowest=TRUE))
cut_RBP
sum(cut_RBP[[3]]$HeartDisease==1)/nrow(cut_RBP[[3]]) #80-120
sum(cut_RBP[[4]]$HeartDisease==1)/nrow(cut_RBP[[4]]) #120-160
sum(cut_RBP[[5]]$HeartDisease==1)/nrow(cut_RBP[[5]]) #160-200
# Cholesterol
heart_failure_dt$Cholesterol %>% summary()
univariate5 <-ggplot(data = heart_failure_dt, aes(x = Cholesterol)) +
geom_boxplot(color = "darkblue", fill = "lightblue") +
labs(title = "Serum Cholesterol Box Plot", x = "Serum Cholesterol") +
theme_minimal()
heart_failure_dt[Cholesterol == 0, .N]
# We split Cholesterol into 7 ranges to further analyse how Cholesterol contributes to heart disease
cut_cholesterol<-split(heart_failure_dt, cut(heart_failure_dt$Cholesterol, c(0,100,200,300,400,500, 600, 700), include.lowest=TRUE))
cut_cholesterol
# From Google (Ranges for total cholesterol in adults):
# •	Normal: Less than 125 - 200 mg/dL – lower than 100 is nor normal.
# •	Borderline high: 200 to 239 mg/dL
# •	High: At or above 240 mg/dL
# Insight: 87% of people who have Cholesterol lower than 100 are at risk of heart disease. Out of these 175 people, 172 have 0 Cholesterol.
# This is definitely an error in data input now. Similarly, since a cholesterol > 240 is already considered high, anything > 300 can be
# abnormally high and definitely should be dealt with.
sum(cut_cholesterol[[1]]$HeartDisease==1)/nrow(cut_cholesterol[[1]]) # 0-100
sum(cut_cholesterol[[2]]$HeartDisease==1)/nrow(cut_cholesterol[[2]]) #100-200
sum(cut_cholesterol[[3]]$HeartDisease==1)/nrow(cut_cholesterol[[3]]) #200-300
sum(cut_cholesterol[[4]]$HeartDisease==1)/nrow(cut_cholesterol[[4]]) #300-400
sum(cut_cholesterol[[5]]$HeartDisease==1)/nrow(cut_cholesterol[[5]]) #400-500
sum(cut_cholesterol[[6]]$HeartDisease==1)/nrow(cut_cholesterol[[6]]) #500-600
sum(cut_cholesterol[[7]]$HeartDisease==1)/nrow(cut_cholesterol[[7]]) #600-700
# FastingBS
# Insight: More individuals have a fasting blood sugar of < 120 mg/dl. A fasting blood sugar level less than 100 mg/dL is normal. Hence,
# more individuals have a normal fasting blood sugar than an abnormal one.
heart_failure_dt$FastingBS %>% summary()
univariate6 <-ggplot(data = heart_failure_dt, aes(x = FastingBS, fill = FastingBS)) +
geom_bar() +
labs(title = "Fasting Blood Sugar Bar Plot", x = "Fasting Blood Sugar", y = "Count") +
theme_minimal()
# Resting ECG
# Insight: Most individuals have a normal resting electrocardiogram result than those having abnormalities.
heart_failure_dt$RestingECG %>% summary()
univariate7 <-ggplot(data = heart_failure_dt, aes(x = RestingECG, fill = RestingECG)) +
geom_bar() +
scale_fill_brewer(palette = "Pastel1") +
labs(title = "Resting Electrocardiogram Results Bar Plot", x = "Resting Electrocardiogram Results", y = "Count") +
theme_minimal()
# Max HR
# Insight: Most individuals have a maximum heart rate of ~120-156. Maximum heart rate of 202 suggests the individual's heart rate is abnormally high,
# since it is already considered dangerous if one's heart rate exceeds 185 beats per minute during exercise. We will deal with the outliers later
# with a suitable value.
heart_failure_dt$MaxHR %>% summary()
univariate8 <-ggplot(data = heart_failure_dt, aes(x = MaxHR)) +
geom_boxplot(color = "darkblue", fill = "lightblue") +
labs(title = "Maximum Heart Rate Box Plot", x = "Maximum Heart Rate") +
theme_minimal()
# We split resting blood pressure into 4 ranges to further analyse how resting blood pressure contributes to heart disease
# Insight: If your maxHR is between 60-100 you have a 79% chance of getting heart disease
# with a maxHR of 100-140, you have a 68% chance, with 140-180 you have a 38% chance and with 180-220 you have a 15% chance
# Thus, the lower your maxHR, the more likely you are to get heart disease.
max(heart_failure_dt$MaxHR)
min(heart_failure_dt$MaxHR)
cut_MaxHR<-split(heart_failure_dt, cut(heart_failure_dt$MaxHR, c(60,100,140,180,220), include.lowest=TRUE))
cut_MaxHR
sum(cut_MaxHR[[1]]$HeartDisease==1)/nrow(cut_MaxHR[[1]]) * 100 #60-100
sum(cut_MaxHR[[2]]$HeartDisease==1)/nrow(cut_MaxHR[[2]]) * 100 #100-140
sum(cut_MaxHR[[3]]$HeartDisease==1)/nrow(cut_MaxHR[[3]]) * 100 #140-180
sum(cut_MaxHR[[4]]$HeartDisease==1)/nrow(cut_MaxHR[[4]]) * 100 #180-220
# ExerciseAngina
# Insight: There are slightly more individuals who experience exercise induced angina than those who do not.
heart_failure_dt$ExerciseAngina %>% summary()
univariate9 <-ggplot(data = heart_failure_dt, aes(x = ExerciseAngina, fill = ExerciseAngina)) +
geom_bar() +
labs(title = "Exercise - Induced Angina Bar Plot", x = "Exercise - Induced Angina Bar Plot", y = "Count") +
theme_minimal()
# Old Peak
# Insight: Most (368) people suggested that they have 0 oldpeak, i.e. 0 depression induced by exercise relative to rest, suggesting that most people may not
# know how exactly to record this as, thus may have left it blank or put a default value of 0.
heart_failure_dt$Oldpeak %>% summary()
univariate10 <-ggplot(data = heart_failure_dt, aes(x = Oldpeak)) +
geom_histogram(color = "darkblue", fill = "lightblue", bins = 30) +
labs(title = "Numeric Value Measured in Depression Histogram Plot", x = "Numeric Value Measured in Depression", y = "Count") +
theme_minimal()
heart_failure_dt[Oldpeak == 0, .N]
# ST_Slope
# Insight: Few individuals have a downward slope during their peak exercise ST Segment (Most have flat or up slope) which makes sense.
# A downward slope would indicate that the patient is more likely to be at risk of heart disease, hence there are fewer of these individuals in our dataset.
heart_failure_dt$ST_Slope %>% summary()
univariate11 <-ggplot(data = heart_failure_dt, aes(x = ST_Slope)) +
geom_bar(fill = "steelblue") +
labs(title = "ST Slope Bar Plot", x = "ST Slope", y = "Count") +
theme_minimal()
# Heart Disease (Dependent Variable)
# Insight: The amount of people who have and do not have heart disease are about the same which is good as it ensures that our data is well-balanced.
heart_failure_dt$HeartDisease %>% summary()
# Probability of getting Heart Disease : 55.3%.
sum(heart_failure_dt$HeartDisease==1)/nrow(heart_failure_dt) * 100
univariate12 <-ggplot(data=heart_failure_dt,aes(HeartDisease,fill=HeartDisease))+
geom_bar()+
scale_fill_brewer(palette = "Set2") +
labs(title = "Heart Disease Bar Plot", x = "Heart Disease", y = "Count")
grid.arrange(univariate1,univariate2,univariate3,univariate4,univariate5,univariate6,univariate7,univariate8,univariate9,univariate10,univariate11,univariate12,ncol=3,nrow=4)
#-------------------#
# BIVARIATE ANALYSIS
#-------------------#
# Age by HeartDisease BoxPlot
# Insight: By looking at the median, older people are more likely to have heart disease.
bivariate1 <-ggplot(data=heart_failure_dt, mapping = aes(x = HeartDisease, y = Age)) +
geom_boxplot(color = "darkblue", fill = "lightblue", alpha = 0.2) +
labs(title = "Distribution of Age by HeartDisease Boxplot") +
theme_minimal()
# Sex By HeartDisease Bar Plot
# Insight: As we can see, heart disease is much more prevalent among males than within females.
# We can see that out of the total males, ~ 63% of them had previous diseases, while only ~ 26% of total women had previous heart diseases.
# However, it might still be good to note that the dataset mostly consists of results from males rather than females.
bivariate2 <-ggplot(data=heart_failure_dt,aes(Sex,fill=HeartDisease))+
geom_bar(position = "fill" )+
scale_y_continuous(labels = scales::percent) +
labs(title = "Distribution of Sex By Heart Disease")+
theme_minimal()
# ChestPainType by HeartDisease Bar Plot
bivariate3 <-ggplot(data=heart_failure_dt,aes(ChestPainType,fill=HeartDisease))+
geom_bar(position = "fill" )+
scale_y_continuous(labels = scales::percent) +
labs(title = "Distribution of Chest Pain Type By Heart Disease")+
theme_minimal()
# Finding out what's the most common chest pain among people with heart disease
heart_failure_dt%>%count(ChestPainType,HeartDisease)%>%mutate(probability=n/sum(n))
# RestingBP by HeartDisease BoxPlot
# Insight: By looking at the median, RestingBP does not really affect whether one has Heart Disease. However, a higher resting BP may cause an individual
# to be at higher risk of heart disease
bivariate4 <-ggplot(data=heart_failure_dt, mapping = aes(x = HeartDisease, y = RestingBP)) +
geom_boxplot(color = "darkblue", fill = "lightblue", alpha = 0.2) +
labs(title = "Distribution of RestingBP by HeartDisease Boxplot") +
theme_minimal()
# Cholesterol by HeartDisease BoxPlot
# Insight: By looking at the median, Cholesterol does not really affect whether one has Heart Disease. In fact, there seem to be people with 0 cholesterol who
# have heart disease which again seems very suspicious. We will deal with this later.
bivariate5 <-ggplot(data=heart_failure_dt, mapping = aes(x = HeartDisease, y = Cholesterol)) +
geom_boxplot(color = "darkblue", fill = "lightblue", alpha = 0.2) +
labs(title = "Distribution of Cholesterol by HeartDisease Boxplot") +
theme_minimal()
# Fasting Blood Sugar By HeartDisease Barplot
bivariate6 <-ggplot(data=heart_failure_dt,aes(FastingBS,fill=HeartDisease))+
geom_bar(position = "fill" )+
scale_y_continuous(labels = scales::percent) +
labs(title = "Fasting Blood Sugar Bar Plot", x = "Fasting Blood Sugar", y = "Count")
# Insight: If you have a FastingBS > 120 mg/dl in other words diabetes, you have a 79% chance of getting heart disease.
# RestingECG by HeartDisease Barplot
bivariate7 <-ggplot(data=heart_failure_dt,aes(RestingECG,fill=HeartDisease))+
geom_bar(position = "fill" )+
scale_y_continuous(labels = scales::percent) +
labs(title = "Resting Electrocardiogram Results Bar Plot", x = "Resting Electrocardiogram Results", y = "Count")
#Insight: With normal resting ECG results you have a 31% of getting Heart Disease,
# with LVH you have a 11% chance of getting heart disease,  and with ST you have a 12% chance
# This tells us that the resting ECG results might be normal but it does not make you safe from heart disease
# the highest % of people with heart disease had a electrocardiogram result of normal
# MaxHR by HeartDisease BoxPlot
# Insight: By looking at the plot, it seems like an individual with lower MaxHR is more likely to have heart disease. This makes sense as one who exercises
# is less likely to have heart disease.
bivariate8 <-ggplot(data=heart_failure_dt, mapping = aes(x = HeartDisease, y = MaxHR)) +
geom_boxplot(color = "darkblue", fill = "lightblue") +
labs(title = "Distribution of MaxHR by HeartDisease Boxplot") +
theme_minimal()
# ExerciseAngina by HeartDisease Barplot
# Insight: If you have exercise-induced angina, you have a much higher probability of getting heart disease at about 85%,
# compared to 35% if you do not.
bivariate9 <-ggplot(data=heart_failure_dt,aes(ExerciseAngina,fill=HeartDisease))+
geom_bar(position = "fill" )+
scale_y_continuous(labels = scales::percent) +
labs(title = "Exercise - Induced Angina Bar Plot", x = "Exercise - Induced Angina Bar Plot", y = "Count")
# Oldpeak by HeartDisease
# Insight 1: Having a positive oldpeak means that one is more likely to have heart disease, which makes sense.
# Insight 2: As old peak increases, one is also increasingly more likely to have heart disease as well, which also makes sense.
cut_oldPeak<-split(heart_failure_dt, cut(heart_failure_dt$Oldpeak, c(-3,-1.5,0,1.5,3,4.5,6,7.5), include.lowest=TRUE))
cut_oldPeak
sum(cut_oldPeak[[1]]$HeartDisease==1)/nrow(cut_oldPeak[[1]]) * 100 # -3 to -1.5
sum(cut_oldPeak[[2]]$HeartDisease==1)/nrow(cut_oldPeak[[2]]) * 100 # -1.5  to 0
sum(cut_oldPeak[[3]]$HeartDisease==1)/nrow(cut_oldPeak[[3]]) * 100 # 0 to 1.5
sum(cut_oldPeak[[4]]$HeartDisease==1)/nrow(cut_oldPeak[[4]]) * 100 # 1.5 to 3
sum(cut_oldPeak[[5]]$HeartDisease==1)/nrow(cut_oldPeak[[5]]) * 100 # 3 to 4.5
sum(cut_oldPeak[[6]]$HeartDisease==1)/nrow(cut_oldPeak[[6]]) * 100 # 4.5 to 6
sum(cut_oldPeak[[7]]$HeartDisease==1)/nrow(cut_oldPeak[[7]]) * 100 # 6 to 7.5
bivariate10 <-ggplot(data=heart_failure_dt, mapping = aes(x = HeartDisease, y = Oldpeak)) +
geom_boxplot(color = "darkblue", fill = "lightblue") +
labs(title = "Distribution of Oldpeak by HeartDisease Boxplot") +
theme_minimal()
# STSlope by HeartDisease Bar Plot
# Insight: Having a flat slope means that one has ~ 42% risk of getting heart disease, while a upward slope means that one only has
# 8% risk and a downward slope means that one only has a 5% risk of getting heart disease.
bivariate11 <-ggplot(data=heart_failure_dt,aes(ST_Slope,fill=HeartDisease))+
geom_bar(position = "fill" )+
scale_y_continuous(labels = scales::percent) +
labs(title = "ST Slope Bar Plot", x = "ST Slope", y = "Count")
grid.arrange(bivariate1,bivariate2,bivariate3,bivariate4,bivariate5,bivariate6,bivariate7,bivariate8,bivariate9,bivariate10,bivariate11,nrow = 4, ncol = 3)
bivariate10 <-ggplot(data=heart_failure_dt, mapping = aes(x = HeartDisease, y = Oldpeak)) +
geom_boxplot(color = "darkblue", fill = "lightblue") +
labs(title = "Distribution of Oldpeak by HeartDisease Boxplot") +
theme_minimal()
# STSlope by HeartDisease Bar Plot
# Insight: Having a flat slope means that one has ~ 42% risk of getting heart disease, while a upward slope means that one only has
# 8% risk and a downward slope means that one only has a 5% risk of getting heart disease.
bivariate11 <-ggplot(data=heart_failure_dt,aes(ST_Slope,fill=HeartDisease))+
geom_bar(position = "fill" )+
scale_y_continuous(labels = scales::percent) +
labs(title = "ST Slope Bar Plot", x = "ST Slope", y = "Count")
grid.arrange(bivariate1,bivariate2,bivariate3,bivariate4,bivariate5,bivariate6,bivariate7,bivariate8,bivariate9,bivariate10,bivariate11,nrow = 4, ncol = 3)
grid.arrange(bivariate1,bivariate2,bivariate3,ncol = 3)
grid.arrange(univariate1,univariate2,univariate3, ncol = 3)
summary(heart_failure_dt)
summary(heart_failure_dt)
